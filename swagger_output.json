{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": ""
  },
  "servers": [
    {
      "url": "http://localhost:3001"
    }
  ],
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Notice",
      "description": "Notice endpoints"
    },
    {
      "name": "User info and user`s pets",
      "description": "User`s pets endpoints"
    },
    {
      "name": "News",
      "description": "News endpoints"
    },
    {
      "name": "Parthers",
      "description": "News endpoints"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "description": "User registration",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        },
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "description": "User log-in",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Email or password invalid",
            "content": {}
          }
        },
        "requestBody": {
          "description": "Log-in object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "User's token"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": ["Auth"],
        "description": "",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "User's token"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/sell": {
      "post": {
        "description": "Add notice for sell",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "any"
                  },
                  "name": {
                    "example": "any"
                  },
                  "breed": {
                    "example": "any"
                  },
                  "place": {
                    "example": "any"
                  },
                  "price": {
                    "example": "any"
                  },
                  "comments": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/goodHands": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "any"
                  },
                  "name": {
                    "example": "any"
                  },
                  "breed": {
                    "example": "any"
                  },
                  "place": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "comments": {
                    "example": "any"
                  },
                  "sex": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/lostFound": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "any"
                  },
                  "name": {
                    "example": "any"
                  },
                  "breed": {
                    "example": "any"
                  },
                  "place": {
                    "example": "any"
                  },
                  "dateOfBirth": {
                    "example": "any"
                  },
                  "comments": {
                    "example": "any"
                  },
                  "sex": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/userprofile": {
      "get": {
        "tags": ["User info and user`s pets"],
        "description": "Get user info and user`s pets",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "User's token"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserprofileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["User info and user`s pets"],
        "description": "Add user`s pet from Database",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Pet's info",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddPetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/userprofile/{ownPetId}": {
      "delete": {
        "tags": ["User info and user`s pets"],
        "description": "Delete user`s pet from Database",
        "parameters": [
          {
            "name": "ownPetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Successful operation",
                      "example": "Pet deleted"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/userprofile/avatar": {
      "patch": {
        "tags": ["User info and user`s pets"],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update user's avatar",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserAvatarResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/news/": {
      "get": {
        "tags": ["News"],
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/notices/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      }
    },
    "/api/notices/paginateNotice": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/api/notices/searchOneTitle": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/api/notices/searchManyTitles": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/api/friends/": {
      "get": {
        "tags": ["Parthers"],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password, min 7 letters max 32",
            "example": "qwerty123"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Stefania"
          },
          "city/region": {
            "type": "string",
            "description": "User's city & region",
            "example": "Akhtyrka, Sumy "
          },
          "mobile phone": {
            "type": "string",
            "description": "User's mobile phone",
            "example": "+380671234567"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "5ADF12S65FDS6A5F5SAD1..."
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Stefania"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "5ADF12S65FDS6A5F5SAD1..."
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Stefania"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Stefania"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "UserprofileResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User's id from backend",
                "format": "uuid"
              },
              "password": {
                "example": "$2a$10$n6y49/m2HoNGox8E82NugOcxd37cNs3nbIz/TSXVC36"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Stefania"
              },
              "city": {
                "type": "string",
                "description": "User's city & region",
                "example": "Akhtyrka, Sumy "
              },
              "mobile phone": {
                "type": "string",
                "description": "User's mobile phone",
                "example": "+380671234567"
              },
              "token": {
                "type": "string",
                "description": "User's token",
                "example": "5ADF12S65FDS6A5F5SAD1..."
              }
            }
          },
          "pets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "User's name",
                  "example": "Stef"
                },
                "city": {
                  "type": "string",
                  "description": "User's city & region",
                  "example": "Akhtyrka, Sumy "
                }
              }
            }
          }
        }
      },
      "UpdateAvatarRequest": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User's avatar",
            "format": "binary"
          }
        }
      },
      "UpdateUserAvatarResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User's URL avatar",
            "example": "https://res.cloudinary.com/demo/image/upload/v1571218330/cr4mxeqx5zb8rlakpfkg.jpg"
          }
        }
      },
      "AddPetRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Frank"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Pet's dateOfBirth",
            "example": "01.01.2023"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "Haski"
          },
          "comments": {
            "type": "string",
            "description": "Pet's comments",
            "example": "Hi loves me"
          },
          "pictureURL": {
            "type": "string",
            "description": "Pet's avatar",
            "format": "binary"
          }
        }
      },
      "AddPetResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Frank"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Pet's dateOfBirth",
            "example": "01.01.2023"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "Haski"
          },
          "comments": {
            "type": "string",
            "description": "Pet's comments",
            "example": "Hi loves me"
          },
          "pictureURL": {
            "type": "string",
            "description": "Pet's avatar",
            "example": "https://res.cloudinary.com/demo/image/upload/v1571218330/cr4mxeqx5zb8rlakpfkg.jpg"
          },
          "owner": {
            "type": "string",
            "description": "Pet's user",
            "format": "uuid"
          },
          "_id": {
            "type": "string",
            "description": "Pet's id from Database",
            "format": "uuid"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
