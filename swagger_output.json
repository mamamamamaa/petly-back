{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.5",
    "title": "REST API for Petly-project",
    "description": "Back-end endpoints for Petly-project"
  },
  "servers": [
    {
      "url": "https://petly-server.onrender.com"
    },
    {
      "url": "http://localhost:3001/"
    }
  ],
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Notice",
      "description": "Notice endpoints"
    },
    {
      "name": "User info and user`s pets",
      "description": "User`s pets endpoints"
    },
    {
      "name": "News",
      "description": "News endpoints"
    },
    {
      "name": "Parthers",
      "description": "News endpoints"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "description": "User registration",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        },
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "description": "User log-in",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Email or password invalid",
            "content": {}
          }
        },
        "requestBody": {
          "description": "Log-in object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        }
      }
    },
    "/api/auth/token": {
      "post": {
        "tags": ["Auth"],
        "description": "Update access token",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "User's token"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "Refresh token",
                      "example": "  5a1ds1f5sa15sc5x1c..."
                    },
                    "expiresIn": {
                      "type": "number",
                      "description": "Time to token's life",
                      "example": "5ADF12S65FDS6A5F5SAD1..."
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "description": "Refresh token",
                    "example": "  5a1ds1f5sa15sc5x1c..."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "description": "Get user info",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "User's token"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": ["Auth"],
        "description": "Logout user",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "User's token"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/auth/update": {
      "put": {
        "tags": ["User info and user`s pets"],
        "description": "Change user info",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update user info",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/avatar": {
      "patch": {
        "tags": ["User info and user`s pets"],
        "description": "Update user's afatar",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update user's avatar",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserAvatarResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/auth/verify": {
      "post": {
        "tags": ["Auth"],
        "description": "Update token",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "User's verificationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "User not found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "description": "Refresh token",
                    "example": "  5a1ds1f5sa15sc5x1c..."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify/{verificationToken}": {
      "get": {
        "tags": ["Auth"],
        "description": "Update access token",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "type": "object",
                "properties": {
                  "message": "Verification mail has successfully send"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "type": "object",
                "properties": {
                  "message": "Missing required field email"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "User e-mail",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/userprofile/": {
      "get": {
        "tags": ["User info and user`s pets"],
        "description": "Get user info and user`s pets",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "User's token"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserprofileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "security": [{ "Bearer": [] }],
        "tags": ["User info and user`s pets"],
        "description": "Add user`s pet from Database",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Pet's info",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddPetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/userprofile/{ownPetId}": {
      "delete": {
        "tags": ["User info and user`s pets"],
        "security": [{ "Bearer": [] }],
        "description": "Delete user`s pet from Database",
        "parameters": [
          {
            "name": "ownPetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Successful operation",
                      "example": "Pet deleted"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/news/": {
      "get": {
        "tags": ["News"],
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/notices/paginateNotice": {
      "get": {
        "tags": ["Notice"],
        "description": "Get notice by type with paginate",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "number of items to skip",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "max records to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["lost/found", "good-hands", "sell"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/notices/searchOneTitle": {
      "get": {
        "tags": ["Notice"],
        "description": "Get notice by title",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/notices/searchManyTitles": {
      "get": {
        "tags": ["Notice"],
        "description": "Get notices by title",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/notices/{noticeId}": {
      "get": {
        "tags": ["Notice"],
        "description": "Get notice by id",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeIdResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": ["Notice"],
        "security": [{ "Bearer": [] }],
        "description": "Delete notice by id",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Successful operation",
                      "example": "Delete with id 63e2a8d1d4dc9fa9a3699b39 success"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/notices/": {
      "get": {
        "tags": ["Notice"],
        "security": [{ "Bearer": [] }],
        "description": "Get user notices",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "number of items to skip",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "max records to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Notice"],
        "security": [{ "Bearer": [] }],
        "description": "Add notice",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Notice info",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddNoticeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "title": "He loves me",
                  "photoUrl": "https://res.cloudinary.com/dmwntn6pl/image/upload/v1675720183/zplitctzaseo94uavefl.png",
                  "breed": "Haski",
                  "place": "Rfgh",
                  "dateOfBirth": "2021-12-31T22:00:00.000Z",
                  "name": "Frank",
                  "sex": "male",
                  "type": "lost/found",
                  "comments": "sdfafefd",
                  "favorite": false,
                  "owner": "63e02449b81d6c15ede0cd6",
                  "_id": "63e175b65b81cd31d2304a5"
                }
              }
            }
          },
          "400": {
            "description": "Invalid notice type"
          }
        }
      }
    },
    "/api/notices/favorite": {
      "get": {
        "tags": ["Notice"],
        "security": [{ "Bearer": [] }],
        "description": "Get favorite notices",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "number of items to skip",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "max records to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteNoticeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/notices/addfavorite/{noticeId}": {
      "patch": {
        "tags": ["Notice"],
        "security": [{ "Bearer": [] }],
        "description": "Add to favorite notice",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing required name field"
          },
          "404": {
            "description": "Not found notice id: ${noticeId}"
          }
        }
      }
    },
    "/api/notices/delfavorite/{noticeId}": {
      "patch": {
        "tags": ["Notice"],
        "security": [{ "Bearer": [] }],
        "description": "Delete to favorite notice",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing required name field"
          },
          "404": {
            "description": "Not found notice id: ${noticeId}"
          }
        }
      }
    },
    "/api/friends/": {
      "get": {
        "tags": ["Parthers"],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password, min 7 letters max 32",
            "example": "qwerty123"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Stefania"
          },
          "city": {
            "type": "string",
            "description": "User's city & region",
            "example": "Akhtyrka, Sumy "
          },
          "mobilePhone": {
            "type": "string",
            "description": "User's mobilePhone",
            "example": "+380671234567"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "User's token",
            "example": "5ADF12S65FDS6A5F5SAD1..."
          },
          "refreshToken": {
            "type": "string",
            "description": "User's token",
            "example": "5ADF12S65FDS6A5F5SAD1..."
          },
          "expiresIn": {
            "type": "number",
            "description": "Time to token's life",
            "example": "5ADF12S65FDS6A5F5SAD1..."
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Stefania"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "User's token",
            "example": "5ADF12S65FDS6A5F5SAD1..."
          },
          "refreshToken": {
            "type": "string",
            "description": "User's token",
            "example": "5ADF12S65FDS6A5F5SAD1..."
          },
          "expiresIn": {
            "type": "number",
            "description": "Time to token's life",
            "example": "5ADF12S65FDS6A5F5SAD1..."
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Stefania"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Stefania"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "UserprofileResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User's id from backend",
                "format": "uuid"
              },
              "password": {
                "example": "$2a$10$n6y49/m2HoNGox8E82NugOcxd37cNs3nbIz/TSXVC36"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Stefania"
              },
              "city": {
                "type": "string",
                "description": "User's city & region",
                "example": "Akhtyrka, Sumy "
              },
              "mobilePhone": {
                "type": "string",
                "description": "User's mobilePhone",
                "example": "+380671234567"
              },
              "accessToken": {
                "type": "string",
                "description": "User's token",
                "example": "5ADF12S65FDS6A5F5SAD1..."
              },
              "refreshToken": {
                "type": "string",
                "description": "User's token",
                "example": "5ADF12S65FDS6A5F5SAD1..."
              },
              "expiresIn": {
                "type": "number",
                "description": "Time to token's life",
                "example": "5ADF12S65FDS6A5F5SAD1..."
              },
              "favorite": {
                "type": "array",
                "description": "Array favorite notices",
                "format": "array"
              }
            }
          },
          "pets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "User's name",
                  "example": "Stef"
                },
                "city": {
                  "type": "string",
                  "description": "User's city & region",
                  "example": "Akhtyrka, Sumy "
                }
              }
            }
          }
        }
      },
      "FavoriteNoticeResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User's id from backend",
                "format": "uuid"
              },
              "password": {
                "example": "$2a$10$n6y49/m2HoNGox8E82NugOcxd37cNs3nbIz/TSXVC36"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Stefania"
              },
              "city": {
                "type": "string",
                "description": "User's city & region",
                "example": "Akhtyrka, Sumy "
              },
              "mobilePhone": {
                "type": "string",
                "description": "User's mobilePhone",
                "example": "+380671234567"
              },
              "accessToken": {
                "type": "string",
                "description": "User's token",
                "example": "5ADF12S65FDS6A5F5SAD1..."
              },
              "refreshToken": {
                "type": "string",
                "description": "User's token",
                "example": "5ADF12S65FDS6A5F5SAD1..."
              },
              "expiresIn": {
                "type": "number",
                "description": "Time to token's life",
                "example": "5ADF12S65FDS6A5F5SAD1..."
              },
              "favorite": {
                "type": "array",
                "description": "Array favorite notices",
                "format": "array"
              }
            }
          }
        }
      },
      "UpdateAvatarRequest": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User's avatar",
            "format": "binary"
          }
        }
      },
      "UpdateUserAvatarResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User's URL avatar",
            "example": "https://res.cloudinary.com/demo/image/upload/v1571218330/cr4mxeqx5zb8rlakpfkg.jpg"
          }
        }
      },
      "AddPetRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Frank"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Pet's dateOfBirth",
            "example": "01.01.2023"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "Haski"
          },
          "comments": {
            "type": "string",
            "description": "Pet's comments",
            "example": "Hi loves me"
          },
          "pictureURL": {
            "type": "string",
            "description": "Pet's avatar",
            "format": "binary"
          }
        }
      },
      "AddPetResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Frank"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Pet's dateOfBirth",
            "example": "01.01.2023"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "Haski"
          },
          "comments": {
            "type": "string",
            "description": "Pet's comments",
            "example": "Hi loves me"
          },
          "pictureURL": {
            "type": "string",
            "description": "Pet's avatar",
            "example": "https://res.cloudinary.com/demo/image/upload/v1571218330/cr4mxeqx5zb8rlakpfkg.jpg"
          },
          "owner": {
            "type": "string",
            "description": "Pet's user",
            "format": "uuid"
          },
          "_id": {
            "type": "string",
            "description": "Pet's id from Database",
            "format": "uuid"
          }
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id from backend",
            "format": "uuid"
          },
          "password": {
            "example": "$2a$10$n6y49/m2HoNGox8E82NugOcxd37cNs3nbIz/TSXVC36"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Stefania"
          },
          "city": {
            "type": "string",
            "description": "User's city & region",
            "example": "Akhtyrka, Sumy "
          },
          "mobilePhone": {
            "type": "string",
            "description": "User's mobilePhone",
            "example": "+380671234567"
          }
        }
      },
      "AddNoticeRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title notice",
            "example": "Sell dog"
          },
          "place": {
            "type": "string",
            "description": "City, Region",
            "example": "Akhtyrka, Sumy "
          },
          "name": {
            "type": "string",
            "description": "Seller's name",
            "example": "Frank"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Pet's dateOfBirth",
            "example": "01.01.2023"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "Haski"
          },
          "sex": {
            "type": "string",
            "description": "Pet's sex",
            "enum": ["male", "female"],
            "example": "male"
          },
          "type": {
            "type": "string",
            "description": "Notice type",
            "enum": ["lost/found", "good-hands", "sell"],
            "example": "sell"
          },
          "price": {
            "type": "string",
            "description": "Pet`s value (ONLY FOR SELL TYPE NOTICE)",
            "example": "50$"
          },
          "comments": {
            "type": "string",
            "description": "Any comments for notice",
            "example": "adfasfasfsa"
          },
          "photoUrl": {
            "type": "string",
            "description": "Pet's avatar",
            "format": "binary"
          }
        }
      },
      "NoticeIdResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title notice",
            "example": "Sell dog"
          },
          "place": {
            "type": "string",
            "description": "City, Region",
            "example": "Akhtyrka, Sumy "
          },
          "name": {
            "type": "string",
            "description": "Seller's name",
            "example": "Frank"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Pet's dateOfBirth",
            "example": "01.01.2023"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "Haski"
          },
          "sex": {
            "type": "string",
            "description": "Pet's sex",
            "enum": ["male", "female"],
            "example": "male"
          },
          "type": {
            "type": "string",
            "description": "Notice type",
            "enum": ["lost/found", "good-hands", "sell"],
            "example": "sell"
          },
          "price": {
            "type": "string",
            "description": "Pet`s value (ONLY FOR SELL TYPE NOTICE)",
            "example": "50$"
          },
          "comments": {
            "type": "string",
            "description": "Any comments for notice",
            "example": "adfasfasfsa"
          },
          "photoUrl": {
            "type": "string",
            "description": "Pet's avatar",
            "format": "binary"
          },
          "favorite": {
            "type": "boolean",
            "description": "This notice if favorite?",
            "format": "boolean"
          }
        }
      },
      "FavoriteRequest": {
        "type": "object",
        "required": ["favorite"],
        "properties": {
          "favorite": {
            "type": "boolean",
            "description": "favorite",
            "format": "boolean"
          }
        }
      },
      "UpdateRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Stefania"
          },
          "city": {
            "type": "string",
            "description": "User's city & region",
            "example": "Akhtyrka, Sumy "
          },
          "mobilePhone": {
            "type": "string",
            "description": "User's mobilePhone",
            "example": "+380671234567"
          },
          "birthday": {
            "type": "date",
            "description": "User's birthday",
            "example": "01.01.2021"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
